name: Release

on:
  release:
    types: [created]

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: viking-snake
  ITCH_IO: true #set to true if you want to enable automatic itch.io deploy

jobs:
  export-windows:
    if: true
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          mv -v /root/.local/share/godot/templates/* ~/.local/share/godot/export_templates/
      - name: Windows Build
        run: |
          mkdir -v -p builds/windows
          godot --headless --export-release "Windows Desktop" ./builds/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: builds/windows
          retention-days: 1
      - name: Zip folder
        run: zip -r build.zip builds/windows
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build.zip
          asset_name: viking-snake_windows-${{ steps.get_version_outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO=='true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: build.zip

  export-linux:
    if: false
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          mv -v /root/.local/share/godot/templates/* ~/.local/share/godot/export_templates/
      - name: Linux Build
        run: |
          mkdir -v -p builds/linux
          godot -v --headless --export-release "Linux/X11" ./builds/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: builds/linux
          retention-days: 1
      - name: Zip Folder
        run: zip -r build.zip builds/linux
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build.zip
          asset_name: viking-snake_linux-${{ steps.get_version_outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO=='true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: build.zip

  export-web:
    if: false
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          mv -v /root/.local/share/godot/templates/* ~/.local/share/godot/export_templates/
      - name: Web Build
        run: |
          mkdir -v -p builds/web
          godot -v --headless --export-release "Web" ./builds/web/index.html
      - name: Add COI Service Worker
        run: |
          wget https://github.com/gzuidhof/coi-serviceworker/raw/master/coi-serviceworker.min.js -O ./builds/web/coi-serviceworker.min.js
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: builds/web
          retention-days: 1
      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: builds/web # The folder the action should deploy.
      - name: Zip Folder
        run: zip -r build.zip builds/web
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build.zip
          asset_name: viking-snake_html-${{ steps.get_version_outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO=='true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: HTML
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: build.zip

  export-mac:
    if: false # currently broken, see https://github.com/crystal-bit/godot-game-template/issues/82
    name: Mac Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          mv -v /root/.local/share/godot/templates/* ~/.local/share/godot/export_templates/
      - name: Mac Build
        run: |
          mkdir -v -p builds/mac
          godot --headless -v --export-release "macOS" ./builds/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mac
          path: builds/mac
          retention-days: 1
      - name: Zip Folder
        run: zip -r build.zip builds/mac
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build.zip
          asset_name: viking-snake_mac-${{ steps.get_version_outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO=='true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: mac
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: build.zip
